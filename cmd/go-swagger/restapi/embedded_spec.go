// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/io.goswagger.go-test-bench.v1+json"
  ],
  "produces": [
    "application/io.goswagger.go-test-bench.v1+json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "An API built with go-swagger to generate intentionally vulnerable endpoints",
    "title": "swagger-bench",
    "version": "1.0.0"
  },
  "paths": {
    "/": {
      "get": {
        "produces": [
          "text/html"
        ],
        "tags": [
          "swagger-server"
        ],
        "operationId": "root",
        "responses": {
          "200": {
            "description": "serves to display the root of the swagger API for the test bench",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/cmdInjection": {
      "get": {
        "produces": [
          "text/html"
        ],
        "tags": [
          "cmd_injection"
        ],
        "summary": "front page of the Command Injection vulnerability",
        "operationId": "CmdInjectionFront",
        "responses": {
          "200": {
            "description": "served front end for Command Injection page of Swagger API",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "error occured"
          }
        }
      }
    },
    "/cmdInjection/exec.Command/query/{safety}": {
      "get": {
        "description": "demonstrates Command Injection via query, with vulnerable function exec.Command",
        "produces": [
          "text/html",
          "text/plain"
        ],
        "tags": [
          "cmd_injection"
        ],
        "operationId": "CmdInjectionGetQueryCommand",
        "parameters": [
          {
            "$ref": "#/parameters/safetyParam"
          },
          {
            "type": "string",
            "description": "the user provided input for the query vulnerability",
            "name": "input",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns the rendered response as a string",
            "schema": {
              "description": "The response when succesful query happens",
              "type": "string"
            }
          },
          "default": {
            "description": "Error occured"
          }
        }
      }
    },
    "/cmdInjection/exec.CommandContext/query/{safety}": {
      "get": {
        "description": "demonstrates Command Injection via query, with vulnerable function exec.CommandContext",
        "produces": [
          "text/html",
          "text/plain"
        ],
        "tags": [
          "cmd_injection"
        ],
        "operationId": "CmdInjectionGetQueryCommandContext",
        "parameters": [
          {
            "$ref": "#/parameters/safetyParam"
          },
          {
            "type": "string",
            "description": "the user provided input for the query vulnerability",
            "name": "input",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns the rendered response as a string",
            "schema": {
              "description": "The response when succesful query happens",
              "type": "string"
            }
          },
          "default": {
            "description": "Error occured"
          }
        }
      }
    },
    "/pathTraversal": {
      "get": {
        "produces": [
          "text/html"
        ],
        "tags": [
          "path_traversal"
        ],
        "summary": "front page of the Path Traversal vulnerability",
        "operationId": "PathTraversalFront",
        "responses": {
          "200": {
            "description": "served front end for Path Traversal page of Swagger API",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "error occured"
          }
        }
      }
    },
    "/pathTraversal/os.Create/buffered-query/{safety}": {
      "get": {
        "description": "demonstrates Path Traversal via buffered-query, with vulnerable function os.Create",
        "produces": [
          "text/html",
          "text/plain"
        ],
        "tags": [
          "path_traversal"
        ],
        "operationId": "PathTraversalGetBufferedQueryCreate",
        "parameters": [
          {
            "$ref": "#/parameters/safetyParam"
          },
          {
            "type": "string",
            "description": "the user provided input for the query vulnerability",
            "name": "input",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns the rendered response as a string",
            "schema": {
              "description": "The response when succesful query happens",
              "type": "string"
            }
          },
          "default": {
            "description": "Error occured"
          }
        }
      }
    },
    "/pathTraversal/os.Create/query/{safety}": {
      "get": {
        "description": "demonstrates Path Traversal via query, with vulnerable function os.Create",
        "produces": [
          "text/html",
          "text/plain"
        ],
        "tags": [
          "path_traversal"
        ],
        "operationId": "PathTraversalGetQueryCreate",
        "parameters": [
          {
            "$ref": "#/parameters/safetyParam"
          },
          {
            "type": "string",
            "description": "the user provided input for the query vulnerability",
            "name": "input",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns the rendered response as a string",
            "schema": {
              "description": "The response when succesful query happens",
              "type": "string"
            }
          },
          "default": {
            "description": "Error occured"
          }
        }
      }
    },
    "/pathTraversal/os.Open/buffered-query/{safety}": {
      "get": {
        "description": "demonstrates Path Traversal via buffered-query, with vulnerable function os.Open",
        "produces": [
          "text/html",
          "text/plain"
        ],
        "tags": [
          "path_traversal"
        ],
        "operationId": "PathTraversalGetBufferedQueryOpen",
        "parameters": [
          {
            "$ref": "#/parameters/safetyParam"
          },
          {
            "type": "string",
            "description": "the user provided input for the query vulnerability",
            "name": "input",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns the rendered response as a string",
            "schema": {
              "description": "The response when succesful query happens",
              "type": "string"
            }
          },
          "default": {
            "description": "Error occured"
          }
        }
      }
    },
    "/pathTraversal/os.Open/query/{safety}": {
      "get": {
        "description": "demonstrates Path Traversal via query, with vulnerable function os.Open",
        "produces": [
          "text/html",
          "text/plain"
        ],
        "tags": [
          "path_traversal"
        ],
        "operationId": "PathTraversalGetQueryOpen",
        "parameters": [
          {
            "$ref": "#/parameters/safetyParam"
          },
          {
            "type": "string",
            "description": "the user provided input for the query vulnerability",
            "name": "input",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns the rendered response as a string",
            "schema": {
              "description": "The response when succesful query happens",
              "type": "string"
            }
          },
          "default": {
            "description": "Error occured"
          }
        }
      }
    },
    "/pathTraversal/os.ReadFile/buffered-query/{safety}": {
      "get": {
        "description": "demonstrates Path Traversal via buffered-query, with vulnerable function os.ReadFile",
        "produces": [
          "text/html",
          "text/plain"
        ],
        "tags": [
          "path_traversal"
        ],
        "operationId": "PathTraversalGetBufferedQueryReadFile",
        "parameters": [
          {
            "$ref": "#/parameters/safetyParam"
          },
          {
            "type": "string",
            "description": "the user provided input for the query vulnerability",
            "name": "input",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns the rendered response as a string",
            "schema": {
              "description": "The response when succesful query happens",
              "type": "string"
            }
          },
          "default": {
            "description": "Error occured"
          }
        }
      }
    },
    "/pathTraversal/os.ReadFile/query/{safety}": {
      "get": {
        "description": "demonstrates Path Traversal via query, with vulnerable function os.ReadFile",
        "produces": [
          "text/html",
          "text/plain"
        ],
        "tags": [
          "path_traversal"
        ],
        "operationId": "PathTraversalGetQueryReadFile",
        "parameters": [
          {
            "$ref": "#/parameters/safetyParam"
          },
          {
            "type": "string",
            "description": "the user provided input for the query vulnerability",
            "name": "input",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns the rendered response as a string",
            "schema": {
              "description": "The response when succesful query happens",
              "type": "string"
            }
          },
          "default": {
            "description": "Error occured"
          }
        }
      }
    },
    "/pathTraversal/os.WriteFile/buffered-query/{safety}": {
      "get": {
        "description": "demonstrates Path Traversal via buffered-query, with vulnerable function os.WriteFile",
        "produces": [
          "text/html",
          "text/plain"
        ],
        "tags": [
          "path_traversal"
        ],
        "operationId": "PathTraversalGetBufferedQueryWriteFile",
        "parameters": [
          {
            "$ref": "#/parameters/safetyParam"
          },
          {
            "type": "string",
            "description": "the user provided input for the query vulnerability",
            "name": "input",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns the rendered response as a string",
            "schema": {
              "description": "The response when succesful query happens",
              "type": "string"
            }
          },
          "default": {
            "description": "Error occured"
          }
        }
      }
    },
    "/pathTraversal/os.WriteFile/query/{safety}": {
      "get": {
        "description": "demonstrates Path Traversal via query, with vulnerable function os.WriteFile",
        "produces": [
          "text/html",
          "text/plain"
        ],
        "tags": [
          "path_traversal"
        ],
        "operationId": "PathTraversalGetQueryWriteFile",
        "parameters": [
          {
            "$ref": "#/parameters/safetyParam"
          },
          {
            "type": "string",
            "description": "the user provided input for the query vulnerability",
            "name": "input",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns the rendered response as a string",
            "schema": {
              "description": "The response when succesful query happens",
              "type": "string"
            }
          },
          "default": {
            "description": "Error occured"
          }
        }
      }
    },
    "/sqlInjection": {
      "get": {
        "produces": [
          "text/html"
        ],
        "tags": [
          "sql_injection"
        ],
        "summary": "front page of the SQL Injection vulnerability",
        "operationId": "SQLInjectionFront",
        "responses": {
          "200": {
            "description": "served front end for SQL Injection page of Swagger API",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "error occured"
          }
        }
      }
    },
    "/sqlInjection/sqlite3.exec/query/{safety}": {
      "get": {
        "description": "demonstrates SQL Injection via query, with vulnerable function sqlite3.exec",
        "produces": [
          "text/html",
          "text/plain"
        ],
        "tags": [
          "sql_injection"
        ],
        "operationId": "SQLInjectionGetQueryExec",
        "parameters": [
          {
            "$ref": "#/parameters/safetyParam"
          },
          {
            "type": "string",
            "description": "the user provided input for the query vulnerability",
            "name": "input",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns the rendered response as a string",
            "schema": {
              "description": "The response when succesful query happens",
              "type": "string"
            }
          },
          "default": {
            "description": "Error occured"
          }
        }
      }
    },
    "/ssrf": {
      "get": {
        "produces": [
          "text/html"
        ],
        "tags": [
          "ssrf"
        ],
        "summary": "front page of the Server Side Request Forgery vulnerability",
        "operationId": "SsrfFront",
        "responses": {
          "200": {
            "description": "served front end for Server Side Request Forgery page of Swagger API",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "error occured"
          }
        }
      }
    },
    "/ssrf/http/query/{safety}": {
      "get": {
        "description": "demonstrates Server Side Request Forgery via query, with vulnerable function net/http",
        "produces": [
          "text/html",
          "text/plain"
        ],
        "tags": [
          "ssrf"
        ],
        "operationId": "SsrfGetQueryHTTP",
        "parameters": [
          {
            "$ref": "#/parameters/safetyParam"
          },
          {
            "type": "string",
            "description": "the user provided input for the query vulnerability",
            "name": "input",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns the rendered response as a string",
            "schema": {
              "description": "The response when succesful query happens",
              "type": "string"
            }
          },
          "default": {
            "description": "Error occured"
          }
        }
      }
    },
    "/xss": {
      "get": {
        "produces": [
          "text/html"
        ],
        "tags": [
          "xss"
        ],
        "summary": "front page of the Reflected XSS vulnerability",
        "operationId": "XSSFront",
        "responses": {
          "200": {
            "description": "served front end for Reflected XSS page of Swagger API",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "error occured"
          }
        }
      }
    },
    "/xss/reflectedXss/buffered-query/{safety}": {
      "get": {
        "description": "demonstrates Reflected XSS via buffered-query, with vulnerable function reflectedXss",
        "produces": [
          "text/html",
          "text/plain"
        ],
        "tags": [
          "xss"
        ],
        "operationId": "XSSGetBufferedQueryReflectedXSS",
        "parameters": [
          {
            "$ref": "#/parameters/safetyParam"
          },
          {
            "type": "string",
            "description": "the user provided input for the query vulnerability",
            "name": "input",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns the rendered response as a string",
            "schema": {
              "description": "The response when succesful query happens",
              "type": "string"
            }
          },
          "default": {
            "description": "Error occured"
          }
        }
      }
    },
    "/xss/reflectedXss/query/{safety}": {
      "get": {
        "description": "demonstrates Reflected XSS via query, with vulnerable function reflectedXss",
        "produces": [
          "text/html",
          "text/plain"
        ],
        "tags": [
          "xss"
        ],
        "operationId": "XSSGetQueryReflectedXSS",
        "parameters": [
          {
            "$ref": "#/parameters/safetyParam"
          },
          {
            "type": "string",
            "description": "the user provided input for the query vulnerability",
            "name": "input",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns the rendered response as a string",
            "schema": {
              "description": "The response when succesful query happens",
              "type": "string"
            }
          },
          "default": {
            "description": "Error occured"
          }
        }
      }
    }
  },
  "definitions": {
    "error": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "format": "int64"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "item": {
      "type": "object",
      "required": [
        "description"
      ],
      "properties": {
        "completed": {
          "type": "boolean"
        },
        "description": {
          "type": "string",
          "minLength": 1
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "readOnly": true
        }
      }
    }
  },
  "parameters": {
    "commandParam": {
      "enum": [
        "exec.Command",
        "exec.CommandContext"
      ],
      "type": "string",
      "description": "specify if exec.Command or exec.CommandContext should be invoked",
      "name": "command",
      "in": "path",
      "required": true
    },
    "safetyParam": {
      "enum": [
        "safe",
        "unsafe",
        "noop"
      ],
      "type": "string",
      "description": "safety qualifier",
      "name": "safety",
      "in": "path",
      "required": true
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/io.goswagger.go-test-bench.v1+json"
  ],
  "produces": [
    "application/io.goswagger.go-test-bench.v1+json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "An API built with go-swagger to generate intentionally vulnerable endpoints",
    "title": "swagger-bench",
    "version": "1.0.0"
  },
  "paths": {
    "/": {
      "get": {
        "produces": [
          "text/html"
        ],
        "tags": [
          "swagger-server"
        ],
        "operationId": "root",
        "responses": {
          "200": {
            "description": "serves to display the root of the swagger API for the test bench",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/cmdInjection": {
      "get": {
        "produces": [
          "text/html"
        ],
        "tags": [
          "cmd_injection"
        ],
        "summary": "front page of the Command Injection vulnerability",
        "operationId": "CmdInjectionFront",
        "responses": {
          "200": {
            "description": "served front end for Command Injection page of Swagger API",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "error occured"
          }
        }
      }
    },
    "/cmdInjection/exec.Command/query/{safety}": {
      "get": {
        "description": "demonstrates Command Injection via query, with vulnerable function exec.Command",
        "produces": [
          "text/html",
          "text/plain"
        ],
        "tags": [
          "cmd_injection"
        ],
        "operationId": "CmdInjectionGetQueryCommand",
        "parameters": [
          {
            "enum": [
              "safe",
              "unsafe",
              "noop"
            ],
            "type": "string",
            "description": "safety qualifier",
            "name": "safety",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "the user provided input for the query vulnerability",
            "name": "input",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns the rendered response as a string",
            "schema": {
              "description": "The response when succesful query happens",
              "type": "string"
            }
          },
          "default": {
            "description": "Error occured"
          }
        }
      }
    },
    "/cmdInjection/exec.CommandContext/query/{safety}": {
      "get": {
        "description": "demonstrates Command Injection via query, with vulnerable function exec.CommandContext",
        "produces": [
          "text/html",
          "text/plain"
        ],
        "tags": [
          "cmd_injection"
        ],
        "operationId": "CmdInjectionGetQueryCommandContext",
        "parameters": [
          {
            "enum": [
              "safe",
              "unsafe",
              "noop"
            ],
            "type": "string",
            "description": "safety qualifier",
            "name": "safety",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "the user provided input for the query vulnerability",
            "name": "input",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns the rendered response as a string",
            "schema": {
              "description": "The response when succesful query happens",
              "type": "string"
            }
          },
          "default": {
            "description": "Error occured"
          }
        }
      }
    },
    "/pathTraversal": {
      "get": {
        "produces": [
          "text/html"
        ],
        "tags": [
          "path_traversal"
        ],
        "summary": "front page of the Path Traversal vulnerability",
        "operationId": "PathTraversalFront",
        "responses": {
          "200": {
            "description": "served front end for Path Traversal page of Swagger API",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "error occured"
          }
        }
      }
    },
    "/pathTraversal/os.Create/buffered-query/{safety}": {
      "get": {
        "description": "demonstrates Path Traversal via buffered-query, with vulnerable function os.Create",
        "produces": [
          "text/html",
          "text/plain"
        ],
        "tags": [
          "path_traversal"
        ],
        "operationId": "PathTraversalGetBufferedQueryCreate",
        "parameters": [
          {
            "enum": [
              "safe",
              "unsafe",
              "noop"
            ],
            "type": "string",
            "description": "safety qualifier",
            "name": "safety",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "the user provided input for the query vulnerability",
            "name": "input",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns the rendered response as a string",
            "schema": {
              "description": "The response when succesful query happens",
              "type": "string"
            }
          },
          "default": {
            "description": "Error occured"
          }
        }
      }
    },
    "/pathTraversal/os.Create/query/{safety}": {
      "get": {
        "description": "demonstrates Path Traversal via query, with vulnerable function os.Create",
        "produces": [
          "text/html",
          "text/plain"
        ],
        "tags": [
          "path_traversal"
        ],
        "operationId": "PathTraversalGetQueryCreate",
        "parameters": [
          {
            "enum": [
              "safe",
              "unsafe",
              "noop"
            ],
            "type": "string",
            "description": "safety qualifier",
            "name": "safety",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "the user provided input for the query vulnerability",
            "name": "input",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns the rendered response as a string",
            "schema": {
              "description": "The response when succesful query happens",
              "type": "string"
            }
          },
          "default": {
            "description": "Error occured"
          }
        }
      }
    },
    "/pathTraversal/os.Open/buffered-query/{safety}": {
      "get": {
        "description": "demonstrates Path Traversal via buffered-query, with vulnerable function os.Open",
        "produces": [
          "text/html",
          "text/plain"
        ],
        "tags": [
          "path_traversal"
        ],
        "operationId": "PathTraversalGetBufferedQueryOpen",
        "parameters": [
          {
            "enum": [
              "safe",
              "unsafe",
              "noop"
            ],
            "type": "string",
            "description": "safety qualifier",
            "name": "safety",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "the user provided input for the query vulnerability",
            "name": "input",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns the rendered response as a string",
            "schema": {
              "description": "The response when succesful query happens",
              "type": "string"
            }
          },
          "default": {
            "description": "Error occured"
          }
        }
      }
    },
    "/pathTraversal/os.Open/query/{safety}": {
      "get": {
        "description": "demonstrates Path Traversal via query, with vulnerable function os.Open",
        "produces": [
          "text/html",
          "text/plain"
        ],
        "tags": [
          "path_traversal"
        ],
        "operationId": "PathTraversalGetQueryOpen",
        "parameters": [
          {
            "enum": [
              "safe",
              "unsafe",
              "noop"
            ],
            "type": "string",
            "description": "safety qualifier",
            "name": "safety",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "the user provided input for the query vulnerability",
            "name": "input",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns the rendered response as a string",
            "schema": {
              "description": "The response when succesful query happens",
              "type": "string"
            }
          },
          "default": {
            "description": "Error occured"
          }
        }
      }
    },
    "/pathTraversal/os.ReadFile/buffered-query/{safety}": {
      "get": {
        "description": "demonstrates Path Traversal via buffered-query, with vulnerable function os.ReadFile",
        "produces": [
          "text/html",
          "text/plain"
        ],
        "tags": [
          "path_traversal"
        ],
        "operationId": "PathTraversalGetBufferedQueryReadFile",
        "parameters": [
          {
            "enum": [
              "safe",
              "unsafe",
              "noop"
            ],
            "type": "string",
            "description": "safety qualifier",
            "name": "safety",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "the user provided input for the query vulnerability",
            "name": "input",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns the rendered response as a string",
            "schema": {
              "description": "The response when succesful query happens",
              "type": "string"
            }
          },
          "default": {
            "description": "Error occured"
          }
        }
      }
    },
    "/pathTraversal/os.ReadFile/query/{safety}": {
      "get": {
        "description": "demonstrates Path Traversal via query, with vulnerable function os.ReadFile",
        "produces": [
          "text/html",
          "text/plain"
        ],
        "tags": [
          "path_traversal"
        ],
        "operationId": "PathTraversalGetQueryReadFile",
        "parameters": [
          {
            "enum": [
              "safe",
              "unsafe",
              "noop"
            ],
            "type": "string",
            "description": "safety qualifier",
            "name": "safety",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "the user provided input for the query vulnerability",
            "name": "input",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns the rendered response as a string",
            "schema": {
              "description": "The response when succesful query happens",
              "type": "string"
            }
          },
          "default": {
            "description": "Error occured"
          }
        }
      }
    },
    "/pathTraversal/os.WriteFile/buffered-query/{safety}": {
      "get": {
        "description": "demonstrates Path Traversal via buffered-query, with vulnerable function os.WriteFile",
        "produces": [
          "text/html",
          "text/plain"
        ],
        "tags": [
          "path_traversal"
        ],
        "operationId": "PathTraversalGetBufferedQueryWriteFile",
        "parameters": [
          {
            "enum": [
              "safe",
              "unsafe",
              "noop"
            ],
            "type": "string",
            "description": "safety qualifier",
            "name": "safety",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "the user provided input for the query vulnerability",
            "name": "input",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns the rendered response as a string",
            "schema": {
              "description": "The response when succesful query happens",
              "type": "string"
            }
          },
          "default": {
            "description": "Error occured"
          }
        }
      }
    },
    "/pathTraversal/os.WriteFile/query/{safety}": {
      "get": {
        "description": "demonstrates Path Traversal via query, with vulnerable function os.WriteFile",
        "produces": [
          "text/html",
          "text/plain"
        ],
        "tags": [
          "path_traversal"
        ],
        "operationId": "PathTraversalGetQueryWriteFile",
        "parameters": [
          {
            "enum": [
              "safe",
              "unsafe",
              "noop"
            ],
            "type": "string",
            "description": "safety qualifier",
            "name": "safety",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "the user provided input for the query vulnerability",
            "name": "input",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns the rendered response as a string",
            "schema": {
              "description": "The response when succesful query happens",
              "type": "string"
            }
          },
          "default": {
            "description": "Error occured"
          }
        }
      }
    },
    "/sqlInjection": {
      "get": {
        "produces": [
          "text/html"
        ],
        "tags": [
          "sql_injection"
        ],
        "summary": "front page of the SQL Injection vulnerability",
        "operationId": "SQLInjectionFront",
        "responses": {
          "200": {
            "description": "served front end for SQL Injection page of Swagger API",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "error occured"
          }
        }
      }
    },
    "/sqlInjection/sqlite3.exec/query/{safety}": {
      "get": {
        "description": "demonstrates SQL Injection via query, with vulnerable function sqlite3.exec",
        "produces": [
          "text/html",
          "text/plain"
        ],
        "tags": [
          "sql_injection"
        ],
        "operationId": "SQLInjectionGetQueryExec",
        "parameters": [
          {
            "enum": [
              "safe",
              "unsafe",
              "noop"
            ],
            "type": "string",
            "description": "safety qualifier",
            "name": "safety",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "the user provided input for the query vulnerability",
            "name": "input",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns the rendered response as a string",
            "schema": {
              "description": "The response when succesful query happens",
              "type": "string"
            }
          },
          "default": {
            "description": "Error occured"
          }
        }
      }
    },
    "/ssrf": {
      "get": {
        "produces": [
          "text/html"
        ],
        "tags": [
          "ssrf"
        ],
        "summary": "front page of the Server Side Request Forgery vulnerability",
        "operationId": "SsrfFront",
        "responses": {
          "200": {
            "description": "served front end for Server Side Request Forgery page of Swagger API",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "error occured"
          }
        }
      }
    },
    "/ssrf/http/query/{safety}": {
      "get": {
        "description": "demonstrates Server Side Request Forgery via query, with vulnerable function net/http",
        "produces": [
          "text/html",
          "text/plain"
        ],
        "tags": [
          "ssrf"
        ],
        "operationId": "SsrfGetQueryHTTP",
        "parameters": [
          {
            "enum": [
              "safe",
              "unsafe",
              "noop"
            ],
            "type": "string",
            "description": "safety qualifier",
            "name": "safety",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "the user provided input for the query vulnerability",
            "name": "input",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns the rendered response as a string",
            "schema": {
              "description": "The response when succesful query happens",
              "type": "string"
            }
          },
          "default": {
            "description": "Error occured"
          }
        }
      }
    },
    "/xss": {
      "get": {
        "produces": [
          "text/html"
        ],
        "tags": [
          "xss"
        ],
        "summary": "front page of the Reflected XSS vulnerability",
        "operationId": "XSSFront",
        "responses": {
          "200": {
            "description": "served front end for Reflected XSS page of Swagger API",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "error occured"
          }
        }
      }
    },
    "/xss/reflectedXss/buffered-query/{safety}": {
      "get": {
        "description": "demonstrates Reflected XSS via buffered-query, with vulnerable function reflectedXss",
        "produces": [
          "text/html",
          "text/plain"
        ],
        "tags": [
          "xss"
        ],
        "operationId": "XSSGetBufferedQueryReflectedXSS",
        "parameters": [
          {
            "enum": [
              "safe",
              "unsafe",
              "noop"
            ],
            "type": "string",
            "description": "safety qualifier",
            "name": "safety",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "the user provided input for the query vulnerability",
            "name": "input",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns the rendered response as a string",
            "schema": {
              "description": "The response when succesful query happens",
              "type": "string"
            }
          },
          "default": {
            "description": "Error occured"
          }
        }
      }
    },
    "/xss/reflectedXss/query/{safety}": {
      "get": {
        "description": "demonstrates Reflected XSS via query, with vulnerable function reflectedXss",
        "produces": [
          "text/html",
          "text/plain"
        ],
        "tags": [
          "xss"
        ],
        "operationId": "XSSGetQueryReflectedXSS",
        "parameters": [
          {
            "enum": [
              "safe",
              "unsafe",
              "noop"
            ],
            "type": "string",
            "description": "safety qualifier",
            "name": "safety",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "the user provided input for the query vulnerability",
            "name": "input",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns the rendered response as a string",
            "schema": {
              "description": "The response when succesful query happens",
              "type": "string"
            }
          },
          "default": {
            "description": "Error occured"
          }
        }
      }
    }
  },
  "definitions": {
    "error": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "format": "int64"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "item": {
      "type": "object",
      "required": [
        "description"
      ],
      "properties": {
        "completed": {
          "type": "boolean"
        },
        "description": {
          "type": "string",
          "minLength": 1
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "readOnly": true
        }
      }
    }
  },
  "parameters": {
    "commandParam": {
      "enum": [
        "exec.Command",
        "exec.CommandContext"
      ],
      "type": "string",
      "description": "specify if exec.Command or exec.CommandContext should be invoked",
      "name": "command",
      "in": "path",
      "required": true
    },
    "safetyParam": {
      "enum": [
        "safe",
        "unsafe",
        "noop"
      ],
      "type": "string",
      "description": "safety qualifier",
      "name": "safety",
      "in": "path",
      "required": true
    }
  }
}`))
}

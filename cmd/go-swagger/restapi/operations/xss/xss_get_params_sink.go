// Code generated by go-swagger; DO NOT EDIT.

package xss

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// XSSGetParamsSinkHandlerFunc turns a function with the right signature into a XSS get params sink handler
type XSSGetParamsSinkHandlerFunc func(XSSGetParamsSinkParams) middleware.Responder

// Handle executing the request and returning a response
func (fn XSSGetParamsSinkHandlerFunc) Handle(params XSSGetParamsSinkParams) middleware.Responder {
	return fn(params)
}

// XSSGetParamsSinkHandler interface for that can handle valid XSS get params sink params
type XSSGetParamsSinkHandler interface {
	Handle(XSSGetParamsSinkParams) middleware.Responder
}

// NewXSSGetParamsSink creates a new http.Handler for the XSS get params sink operation
func NewXSSGetParamsSink(ctx *middleware.Context, handler XSSGetParamsSinkHandler) *XSSGetParamsSink {
	return &XSSGetParamsSink{Context: ctx, Handler: handler}
}

/* XSSGetParamsSink swagger:route GET /xss/Sink/params/{safety} xss xssGetParamsSink

demonstrates Reflected XSS via params, with vulnerable function _

*/
type XSSGetParamsSink struct {
	Context *middleware.Context
	Handler XSSGetParamsSinkHandler
}

func (o *XSSGetParamsSink) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewXSSGetParamsSinkParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}

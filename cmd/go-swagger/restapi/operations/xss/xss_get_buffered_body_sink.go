// Code generated by go-swagger; DO NOT EDIT.

package xss

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// XSSGetBufferedBodySinkHandlerFunc turns a function with the right signature into a XSS get buffered body sink handler
type XSSGetBufferedBodySinkHandlerFunc func(XSSGetBufferedBodySinkParams) middleware.Responder

// Handle executing the request and returning a response
func (fn XSSGetBufferedBodySinkHandlerFunc) Handle(params XSSGetBufferedBodySinkParams) middleware.Responder {
	return fn(params)
}

// XSSGetBufferedBodySinkHandler interface for that can handle valid XSS get buffered body sink params
type XSSGetBufferedBodySinkHandler interface {
	Handle(XSSGetBufferedBodySinkParams) middleware.Responder
}

// NewXSSGetBufferedBodySink creates a new http.Handler for the XSS get buffered body sink operation
func NewXSSGetBufferedBodySink(ctx *middleware.Context, handler XSSGetBufferedBodySinkHandler) *XSSGetBufferedBodySink {
	return &XSSGetBufferedBodySink{Context: ctx, Handler: handler}
}

/* XSSGetBufferedBodySink swagger:route GET /xss/Sink/buffered-body/{safety} xss xssGetBufferedBodySink

demonstrates Reflected XSS via buffered-body, with vulnerable function _

*/
type XSSGetBufferedBodySink struct {
	Context *middleware.Context
	Handler XSSGetBufferedBodySinkHandler
}

func (o *XSSGetBufferedBodySink) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewXSSGetBufferedBodySinkParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
